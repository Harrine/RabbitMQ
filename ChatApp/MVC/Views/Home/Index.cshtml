@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "RabbitMQ Sender and Receiver";
}



<div class="container mt-5">
    <h1 class="text-center mb-4">Welcome : @HttpContextAccessor.HttpContext.Session.GetString("Username")</h1>
    <div class="row">

        <div class="col-md-6">
            <h2>@HttpContextAccessor.HttpContext.Session.GetString("Username") :</h2>
            <form id="sendMessageForm">
                @* This for writing the message *@
                @* <div class="mb-3">
                    <label for="queueName" class="form-label">Queue Name</label>
                    <input type="text" class="form-control" id="queueName" placeholder="Enter queue name" required>
                </div> *@

                <div class="mb-3" style="display: none;">
                    <label for="queueName" class="form-label">Queue Name</label>
                    <input type="text" class="form-control" id="queueName" placeholder="Enter queue name"
                        value="@HttpContextAccessor.HttpContext.Session.GetString("Username")" required>
                </div>

                <div class="mb-3">
                    <textarea class="form-control" id="message" rows="3" placeholder="Enter your message"
                        required></textarea>
                </div>
                @* Submit button for sending the message *@
                <button type="submit" class="btn btn-primary">Send Message</button>
            </form>
            <div id="sendMessageResult" class="mt-3"></div>
        </div>


        <div class="col-md-6">
            <form id="receiveMessageForm">
                <div class="mb-3">
                    <label for="queueName" class="form-label">Sender Name</label>
                    <input type="text" class="form-control" id="queueNameReceive" placeholder="Enter Person name"
                        required>
                </div>
                @* <button type="submit" class="btn btn-success">Receive Message</button> *@
            </form>
            <div id="receiveMessageResult" class="mt-3"></div>
        </div>
    </div>
</div>

<div id="chatbox">

</div>

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>

    $(document).ready(function () {

        const senderUsername = '@HttpContextAccessor.HttpContext.Session.GetString("Username")';
        $('#sendMessageForm').on('submit', function (e) {
            e.preventDefault();
            const queueNameReceiver = $('#queueNameReceive').val();
            const queueName = $('#queueName').val();
            @* const queueName = @HttpContextAccessor.HttpContext.Session.GetString("Username"); *@
            const message = $('#message').val();
            console.log(queueName);

            $.ajax({
                url: "http://localhost:5209/api/Message/send?queueName=" + queueName + "&sender=" + senderUsername,
                @* url: "http://localhost:5209/api/Message/send?queueName=harrine", *@
                type: 'post',
                contentType: 'application/json',
                data: JSON.stringify(message),
                success: function (response) {
                    @* $('#sendMessageResult').append(`<div class="alert alert-success">${queueName} : ${message}</div>`); *@
                        @* $('#chatbox').append(`<div class="alert alert-success">${queueName} : ${message}</div>`); *@

                        @* $('#chatbox').append(`<div class="message sender">${senderUsername}: ${message}</div>`); *@
                    console.log("Successfully sent to sender's queue");
                },
                error: function (error) {
                    $('#sendMessageResult').html(`<div class="alert alert-danger">${error.responseJSON}</div>`);
                    console.error("Error receiving messages: ", error.responseText);
                }
            });
        $.ajax({
            url: "http://localhost:5209/api/Message/send?queueName=" + queueNameReceiver + "&sender=" + senderUsername,
                @* url: "http://localhost:5209/api/Message/send?queueName=harrine", *@
            type: 'post',
            contentType: 'application/json',
            data: JSON.stringify(message),
            success: function (response) {
                @* $('#sendMessageResult').append(`<div class="alert alert-success">${queueName} : ${message}</div>`); *@
                    console.log("Successfully sent");
            },
            error: function (error) {
                $('#sendMessageResult').html(`<div class="alert alert-danger">Please define Person name with whomyou want to chat : </div>`);
                console.error("Error receiving messages: ", error.responseText);
            }
            });
    $('#message').val('');
    });




    function fetchMessages_At_Every_two_Seconds() {
        const queueName = $('#queueNameReceive').val();
        $.ajax({

            url: "http://localhost:5209/api/Message/receive?queueName=" + queueName,
            type: 'get',
            success: function (response) {
                // Append the new message to the existing messages
                //$('#chatbox').append(`<div class="alert alert-success">@HttpContextAccessor.HttpContext.Session.GetString("Username") receiver : ${response}</div>`);
                console.log("sender : "+response.sender);
                if (response.sender === senderUsername) {
                    // Display the message on the left (sender's side)
                    $('#chatbox').append(`<div class="message sender">You: ${response.message}</div>`);
                } else {
                    // Display the message on the right (receiver's side)
                    $('#chatbox').append(`<div class="message receiver">${response.sender}: ${response.message}</div>`);
                }

            },
            error: function (error) {
                // Display error message if the request fails
                console.log("Error receiving messages: ", error.responseText);
            }
        });
    }


    setInterval(fetchMessages_At_Every_two_Seconds, 2000)
   
    })
</script>